package sse;

import compute.RelevancyDegree;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import logic.FinalSummarize;
import logic.HandleOntology;

import constants.Constants;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author melot
 */
import extract.MatchFeaAndSen;
import extract.DealComments;
public class Summarization extends javax.swing.JFrame {

    /**
     * Creates new form Summarization
     */
    public Summarization() {
        initComponents();
		jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "评分", "源评论"
            }
        ));
		TableColumn column = jTable1.getColumnModel().getColumn(0);
		column.setPreferredWidth(35);
		column.setMaxWidth(35);
		column.setMinWidth(35);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        SumarizeArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        fileArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paramArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        paramOpenMenu = new javax.swing.JMenuItem();
        fileOpenMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));

        startButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        startButton.setText("开始");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        SumarizeArea.setColumns(20);
        SumarizeArea.setRows(5);
        jScrollPane2.setViewportView(SumarizeArea);

        jLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel1.setText("评论文件名:");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("手机综述:");

        fileArea.setColumns(20);
        fileArea.setRows(5);
        fileArea.setEnabled(false);
        jScrollPane3.setViewportView(fileArea);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("评  论");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel4.setText("参数文件名:");

        paramArea.setColumns(20);
        paramArea.setRows(5);
        paramArea.setEnabled(false);
        jScrollPane1.setViewportView(paramArea);

        fileMenu.setText("File");

        paramOpenMenu.setText("打开参数文件");
        paramOpenMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramOpenMenuActionPerformed(evt);
            }
        });
        fileMenu.add(paramOpenMenu);

        fileOpenMenu.setText("打开评论文件");
        fileOpenMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileOpenMenuActionPerformed(evt);
            }
        });
        fileMenu.add(fileOpenMenu);

        jMenuBar1.add(fileMenu);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(fileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(279, 279, 279))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startButton)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(58, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(startButton)
                        .addGap(5, 5, 5)
                        .addComponent(fileLabel)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("fileLabel");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
     public void copyFile(String filename) {
        File file = new File(filename);
        Long fileLen = file.length();
        char[] fileContent = new char[fileLen.intValue()];
        try {              
            BufferedReader in = new BufferedReader(new InputStreamReader(
                    new FileInputStream(file), "GBK"));               
            in.read(fileContent);
            in.close();
            OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(Constants.SOURCE_COMMENTS), "GBK");
            out.write(fileContent);
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }  
    
     private void dealComments() {
        String file = fileArea.getText();
        copyFile(file);
        DealComments.posSourceText(Constants.SOURCE_COMMENTS, Constants.MIDDLE_COMMENTS);
        MatchFeaAndSen.matchFeaAndSen(Constants.MIDDLE_COMMENTS, Constants.FINAL_COMMENTS, Constants.FEATURE_DICTIONARY_FILE , Constants.SENTIMENT_DICTIONARY_FILE);       
    }

    
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        //jTable1.removeAll();
        ((DefaultTableModel)jTable1.getModel()).setRowCount(0);
        showComments();
        dealComments();
        DealComments.ictlcas.ICTCLAS_Exit();
        
        String proParamFile = paramArea.getText();
        String reviewAfterPar = Constants.FINAL_COMMENTS;
        
		//initial a area tree
		HandleOntology hand = new HandleOntology();
		//hand.delimateDuplicateNode(hand.getRoot());
		//这里有一个函数是把得到的评论文本分词，然后传回分词后的文件名
		RelevancyDegree test1 = new RelevancyDegree(reviewAfterPar);
		test1.sentencefile = reviewAfterPar;
		for(RelevancyDegree.SenFea senfea : test1.comSenFea){
			try {
				hand.basicTree.reset(senfea.feature, "realSentiment", senfea.sentiment);
			} catch (SecurityException | ClassNotFoundException
					| IllegalArgumentException | IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
                hand = new HandleOntology();
                FinalSummarize sum = new FinalSummarize();
		sum.getArgumentsList(proParamFile);//���ز����ļ�
		sum.addProParameterToAreaTree(hand.basicTree);//���ز���������
		String[][] review = sum.getActualReviewParameter( "D:\\programs-about-dachuang\\11-22\\特别度计算库\\result.txt");//�����û����չ�ע�������ļ�
		String summarize = sum.getSummarize(hand.basicTree, review);//���ժҪ
                System.out.print(summarize);//��ӡժҪ
		FileOutputStream fis;
		try {
			fis = new FileOutputStream( hand.filestart + "Summarize.txt",
					true);
			OutputStreamWriter osw = new OutputStreamWriter(fis);
			osw.write(summarize);
			osw.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
        try {
            SumarizeArea.setText(new String(summarize.getBytes("UTF-8"),"UTF-8"));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Summarization.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void showComments() {
        String file = fileArea.getText();
        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(file)), "GBK"));
            String line = null;
            while ((line = br.readLine()) != null && line.length() > 4) {
                Vector<String> data = new Vector<String>();
                data.add(line.charAt(0) + "");
                data.add(line.substring(3));
                ((DefaultTableModel)jTable1.getModel()).addRow(data);
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void fileOpenMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileOpenMenuActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        int value = file.showOpenDialog(null);
        if (JFileChooser.APPROVE_OPTION == value) {
            fileArea.setText(file.getSelectedFile().toString());
        }
    }//GEN-LAST:event_fileOpenMenuActionPerformed

    private void paramOpenMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramOpenMenuActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        int value = file.showOpenDialog(null);
        if (JFileChooser.APPROVE_OPTION == value) {
            paramArea.setText(file.getSelectedFile().toString());
        }
    }//GEN-LAST:event_paramOpenMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Summarization.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Summarization.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Summarization.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Summarization.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Summarization().setVisible(true);
            }
        });
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea SumarizeArea;
    private javax.swing.JTextArea fileArea;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileOpenMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea paramArea;
    private javax.swing.JMenuItem paramOpenMenu;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
